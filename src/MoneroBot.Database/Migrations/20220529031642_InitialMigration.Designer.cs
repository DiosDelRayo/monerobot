// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneroBot.Database;

#nullable disable

namespace MoneroBot.Database.Migrations
{
    [DbContext(typeof(MoneroBotContext))]
    [Migration("20220529031642_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("MoneroBot.Database.Entities.Bounty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<uint>("PostNumber")
                        .HasColumnType("INTEGER")
                        .HasColumnName("post_number");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("slug");

                    b.HasKey("Id")
                        .HasName("pk_bounties");

                    b.HasIndex("PostNumber")
                        .IsUnique()
                        .HasDatabaseName("ix_bounties_post_number");

                    b.ToTable("bounties", (string)null);
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("CommentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("comment_id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("content");

                    b.HasKey("Id")
                        .HasName("pk_comments");

                    b.HasIndex("CommentId")
                        .IsUnique()
                        .HasDatabaseName("ix_comments_comment_id");

                    b.ToTable("comments", (string)null);
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.Donation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int?>("CommentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("comment_id");

                    b.Property<int>("DonationAddressId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("donation_address_id");

                    b.HasKey("Id")
                        .HasName("pk_donations");

                    b.HasIndex("CommentId")
                        .IsUnique()
                        .HasDatabaseName("ix_donations_comment_id");

                    b.HasIndex("DonationAddressId")
                        .HasDatabaseName("ix_donations_donation_address_id");

                    b.ToTable("donations", (string)null);
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.DonationAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.Property<int>("BountyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("bounty_id");

                    b.Property<int?>("CommentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("comment_id");

                    b.HasKey("Id")
                        .HasName("pk_donation_addresses");

                    b.HasIndex("Address")
                        .IsUnique()
                        .HasDatabaseName("ix_donation_addresses_address");

                    b.HasIndex("BountyId")
                        .HasDatabaseName("ix_donation_addresses_bounty_id");

                    b.HasIndex("CommentId")
                        .IsUnique()
                        .HasDatabaseName("ix_donation_addresses_comment_id");

                    b.ToTable("donation_addresses", (string)null);
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.DonationEnote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("DonationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("donation_id");

                    b.Property<int>("EnoteId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("enote_id");

                    b.HasKey("Id")
                        .HasName("pk_donation_enotes");

                    b.HasIndex("DonationId")
                        .HasDatabaseName("ix_donation_enotes_donation_id");

                    b.HasIndex("EnoteId")
                        .IsUnique()
                        .HasDatabaseName("ix_donation_enotes_enote_id");

                    b.ToTable("donation_enotes", (string)null);
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.Enote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("address");

                    b.Property<ulong>("Amount")
                        .HasColumnType("INTEGER")
                        .HasColumnName("amount");

                    b.Property<ulong>("BlockHeight")
                        .HasColumnType("INTEGER")
                        .HasColumnName("block_height");

                    b.Property<bool>("IsSpent")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_spent");

                    b.Property<bool>("IsUnlocked")
                        .HasColumnType("INTEGER")
                        .HasColumnName("is_unlocked");

                    b.Property<string>("PubKey")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("pub_key");

                    b.Property<string>("TxHash")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("tx_hash");

                    b.HasKey("Id")
                        .HasName("pk_enotes");

                    b.HasIndex("Address")
                        .HasDatabaseName("ix_enotes_address");

                    b.HasIndex("PubKey")
                        .IsUnique()
                        .HasDatabaseName("ix_enotes_pub_key");

                    b.ToTable("enotes", (string)null);
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.QueryResults.PostNumber", b =>
                {
                    b.Property<int>("Number")
                        .HasColumnType("INTEGER")
                        .HasColumnName("number");

                    b.ToTable("PostNumber", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.Donation", b =>
                {
                    b.HasOne("MoneroBot.Database.Entities.Comment", "Comment")
                        .WithMany()
                        .HasForeignKey("CommentId")
                        .HasConstraintName("fk_donations_comments_comment_id");

                    b.HasOne("MoneroBot.Database.Entities.DonationAddress", "DonationAddress")
                        .WithMany("Donations")
                        .HasForeignKey("DonationAddressId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_donations_donation_addresses_donation_address_id");

                    b.Navigation("Comment");

                    b.Navigation("DonationAddress");
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.DonationAddress", b =>
                {
                    b.HasOne("MoneroBot.Database.Entities.Bounty", "Bounty")
                        .WithMany("DonationAddresses")
                        .HasForeignKey("BountyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_donation_addresses_bounties_bounty_id");

                    b.HasOne("MoneroBot.Database.Entities.Comment", "Comment")
                        .WithOne()
                        .HasForeignKey("MoneroBot.Database.Entities.DonationAddress", "CommentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .HasConstraintName("fk_donation_addresses_comments_comment_id");

                    b.Navigation("Bounty");

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.DonationEnote", b =>
                {
                    b.HasOne("MoneroBot.Database.Entities.Donation", "Donation")
                        .WithMany("DonationEnotes")
                        .HasForeignKey("DonationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_donation_enotes_donations_donation_id");

                    b.HasOne("MoneroBot.Database.Entities.Enote", "Enote")
                        .WithMany()
                        .HasForeignKey("EnoteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_donation_enotes_enotes_enote_id");

                    b.Navigation("Donation");

                    b.Navigation("Enote");
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.Bounty", b =>
                {
                    b.Navigation("DonationAddresses");
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.Donation", b =>
                {
                    b.Navigation("DonationEnotes");
                });

            modelBuilder.Entity("MoneroBot.Database.Entities.DonationAddress", b =>
                {
                    b.Navigation("Donations");
                });
#pragma warning restore 612, 618
        }
    }
}
